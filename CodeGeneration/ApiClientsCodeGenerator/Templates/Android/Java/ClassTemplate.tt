<#@ template visibility="internal" #>
<#@ import namespace="CodeGeneration.ApiClientsCodeGenerator.Converters.Android" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
package <#= converter.GetPackage(type) #>;

<#
	foreach (var item in imports)
	{
#>
import <#= item #>;
<#
	}
#>

<#
	var extendsText = "";
	var superclass = type.BaseType;
	if (superclass != null && superclass != typeof(object))
	{
		extendsText = " extends " + converter.GetTypeName(superclass);
	}
	var implementsText = type.IsSerializableInAndroid() ? " implements Serializable" : "";
	var members = type.GetDataMembers().ToArray();
	var declaredMembers = members.Where(item => item.DeclaringType == type);
	var inheritedMembers = members.Where(item => item.DeclaringType != type);
	var constructorArguments = members.Select(item => $"{converter.GetTypeName(item.PropertyType)} {item.Name.ToCamelCase()}");
	var baseConstructorParams = inheritedMembers.Select(item => item.Name.ToCamelCase());
#>
public class <#= converter.GetTypeName(type) #><#= extendsText #><#= implementsText #> {
<#
	if (declaredMembers.Any())
	{
		foreach (var member in declaredMembers)
		{
#>
	public <#= converter.GetTypeName(member.PropertyType) #> <#= member.Name.ToCamelCase() #>;
<#
		}
		if (members.Any())
		{
#>

<#
		}
	}
	if (members.Any())
	{
#>
	public <#= converter.GetTypeName(type, false) #>() {
	}

	public <#= converter.GetTypeName(type, false) #>(<#= string.Join(", ", constructorArguments) #>) {
<#
		if (baseConstructorParams.Any()) 
		{
#>
		super(<#= string.Join(", ", baseConstructorParams) #>);
<#
		}
		foreach (var member in declaredMembers)
		{
#>
		this.<#= member.Name.ToCamelCase() #> = <#= member.Name.ToCamelCase() #>;
<#
		}
#>
	}
<#
	}
#>
}
<#+
	private JavaAndroidConverter converter;
	private Type type;
	private List<string> imports;
	internal ClassTemplate(JavaAndroidConverter converter, Type type, IEnumerable<string> imports)
	{
		this.converter = converter;
		this.type = type;
		this.imports = new List<string>
		{
			"java.util.*", "java.math.*", "java.lang.*"
		};
		if (type.IsSerializableInAndroid())
		{
			this.imports.Add("java.io.*");
		}
		this.imports.AddRange(imports);
	}
#>